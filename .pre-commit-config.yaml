default_stages: ['commit']
repos:
# pre-commit repo:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.1.0
  hooks:
  # general hooks:
  - id: check-added-large-files  # Prevent giant files from being committed
    args: ['--maxkb=5000']
  - id: check-case-conflict  # Check for files with names that would conflict on a case-insensitive filesystems
  - id: check-executables-have-shebangs  # Checks that non-binary executables have a proper shebang
  - id: check-merge-conflict  # Check for files that contain merge conflict strings
  - id: check-symlinks  # Checks for symlinks which do not point to anything
  - id: check-yaml  # Attempts to load all yaml files to verify syntax
  - id: destroyed-symlinks  # Detects symlinks which are changed to regular files
  - id: detect-private-key  # Checks for the existence of private keys
  - id: end-of-file-fixer  # Makes sure files end in a newline and only a newline
  - id: fix-byte-order-marker  # removes UTF-8 byte order marker
  - id: mixed-line-ending  # Replaces or checks mixed line endings
    args: ['--fix=lf']
  - id: trailing-whitespace  # Trims trailing whitespace
  # Python specific hooks:
  - id: check-ast  # Simply check whether files parse as valid python
  - id: check-docstring-first  # Checks for a common error of placing code before the docstring
  - id: debug-statements  # Check for debugger imports and py37+ `breakpoint()` calls in python source
  - id: fix-encoding-pragma  # Remove `# -*- coding: utf-8 -*-` from the top of python files
    args: ['--remove']
  - id: name-tests-test  # Assert that files in tests/ end in `_test.py`
  - id: requirements-txt-fixer  # Sorts entries in requirements.txt and removes incorrect entry `pkg-resources==0.0.0`
# General repos:
- repo: https://github.com/editorconfig-checker/editorconfig-checker.python
  rev: 2.4.0
  hooks:
  - id: editorconfig-checker
    exclude_types: [markdown]
- repo: https://github.com/IngoMeyer441/detect-direct-checkins
  rev: v0.1.2
  hooks:
  - id: detect-direct-checkins
    args: ['--branch=master', '--allow-root']
- repo: https://github.com/jorisroovers/gitlint
  rev: v0.17.0
  hooks:
  - id: gitlint
    args: [
      '--ignore=body-is-missing,title-must-not-contain-word',
      '--msg-filename',
    ]
- repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.31.1
  hooks:
  - id: markdownlint
- repo: https://github.com/adrienverge/yamllint
  rev: v1.26.3
  hooks:
  - id: yamllint
    args: [
      '--config-data={extends: default, rules: {indentation: {indent-sequences: consistent}, line-length: {max: 120}}}'
    ]
- repo: https://github.com/sirosen/check-jsonschema
  rev: 0.14.0
  hooks:
  - id: check-jsonschema
    name: 'Validate GitLab CI configuration'
    files: ^\.gitlab-ci.yml
    args: [
      '--schemafile',
      'https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json',
    ]
- repo: https://github.com/sirosen/check-jsonschema
  rev: 0.14.0
  hooks:
  - id: check-github-workflows
# Python specific repos:
- repo: https://github.com/psf/black
  rev: 22.3.0
  hooks:
  - id: black
    args: ['--line-length=120']
- repo: https://github.com/PyCQA/isort
  rev: 5.10.1
  hooks:
  - id: isort
    args: [  # Arguments for `black` compatibility
      '--line-length=120',
      '--multi-line=3',
      '--trailing-comma',
      '--force-grid-wrap=0',
      '--use-parentheses',
      '--ensure-newline-before-comments',
    ]
- repo: https://github.com/pycqa/flake8
  rev: 4.0.1
  hooks:
  - id: flake8
    args: [
      '--max-line-length=120',
      '--ignore=E203,W503',  # Otherwise, `flake8` is not compatible with `black`
    ]
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v0.910
  hooks:
  - id: mypy
    args: ['--ignore-missing-imports', '--strict']
